<?php
/**
 * @package    http://www.rulaiyun.cn/
 * @author     wang <wangyaxu7019@dingtalk.com>
 * @copyright  Copyright &copy; rulaiyun.cn,2018 - 2019
 */

namespace app\models;

use yii\db\ActiveRecord;
use yii\helpers\ArrayHelper;

/**
 * This is the model class for table "rly_wifi".
 *
 * @property int    $id
 * @property string $number                编号
 * @property string $name                  分类名称
 * @property string $create_time           创建时间
 * @property string $update_time           更新时间
 */
class Category extends ActiveRecord
{

    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return '{{%categories}}';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name',], 'required',],
            [['number',], 'number','max'=>99999999,'on'=>['create']],
            [['number',], 'unique'],
//            [
//                ['mobile'],
//                'match',
//                'pattern' => '/^1[34578]\d{9}$/',
//            ],
        ];
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'number' => '分类编号',
            'name' => '分类名称',
            'create_time' => '创建日期',
            'update_time' => '更新日期',
        ];
    }

    /**
     * 根据id获取分类名称
     * @param $id
     * @return string
     * author: Wang YX
     */
    public static function getName($id = 0){

        $data = \Yii::$app->cache->getOrSet('category'.$id, function () use ($id) {
            $res = self::findOne($id);
            return $res['name'];
        });


        return $data;
    }


    /**
     * 获取全部分类数据
     * @param $id
     * @return string
     * author: Wang YX
     */
    public static function getCategories(){
        $res = self::find()->select(['id', 'name'])->asArray()->all();
        $data = ArrayHelper::map($res,'id','name');
        return $data;
    }

    /**
     * @param bool $insert
     * @return bool
     * @author wang
     */
    public function beforeSave($insert)
    {
        if ($insert) {    //新增
            $this->create_time = date('Y-m-d H:i:s');
            $this->update_time = date('Y-m-d H:i:s');
            if (empty($this->number)) {
                $sql='SELECT MAX(number) AS `max` FROM jl_categories';
                $rows=\Yii::$app->db->createCommand($sql)->query()->read();
                $res = explode('_',$rows['max']);
                if (empty($res[1])) {
                    $this->number = 'jl_000001';
                } else {
                    $int = (int)$res[1] + 1;
                    $this->number = 'jl_' . str_pad($int,6,0,STR_PAD_LEFT);
                }
            } else {
                $this->number = str_pad($this->number,9,0,STR_PAD_LEFT);
            }
        } else {    //修改
            $this->update_time = date('Y-m-d H:i:s');
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @param bool  $insert
     * @param array $changedAttributes
     * @author wang
     */
    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }

    /**
     * 删除之后
     */
    public function afterDelete()
    {
        parent::afterDelete(); // TODO: Change the autogenerated stub
    }


}
